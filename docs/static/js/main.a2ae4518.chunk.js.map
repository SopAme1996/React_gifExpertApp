{"version":3,"sources":["Componentes/AddCategoria.js","helpers/getGifs.js","Componentes/GfGridItem.js","Componentes/RestApi.js","Hooks/useFetchGifs.js","GiffApp.js","index.js"],"names":["AddCategoria","setData","useState","input","setInput","onSubmit","e","preventDefault","trim","length","data","type","value","onChange","target","placeholder","getEndPoint","categoria","a","url","encodeURI","fetch","respuesta","json","jsonRespuesta","resultadoBusqueda","personajes","map","img","id","title","images","downsized_medium","GfGridItem","className","src","alt","RestApi","loading","state","setState","useEffect","then","useFetchGifs","imagenes","console","log","GiffApp","nombre","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAEbC,mBAAS,IAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAQ,SAAAS,GAAI,OAAKP,GAAL,mBAAeO,OAC3BN,EAAS,MAKb,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAOU,SAflB,SAACP,GACpBF,EAASE,EAAEQ,OAAOF,QAc4CG,YAAY,qC,+BCtBrEC,EAAW,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,sEAGP,mCACNC,EAJa,uDAGP,mCAHO,cAIkDC,UAAUH,GAJ5D,sBAKKI,MAAMF,GALX,cAKbG,EALa,gBAMSA,EAAUC,OANnB,cAMbC,EANa,OAObC,EAAoBD,EAAcd,KAElCgB,EAAaD,EAAkBE,KAAK,SAAAC,GAAO,IAAD,EAC5C,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAbvB,kBAgBZO,GAhBY,2DAkBZ,4BAlBY,0DAAH,sDCEXO,EAAa,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,IAC/B,OACI,sBAAKe,UAAU,OAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UAAgB,ECFd,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BQ,KAAM,GACN4B,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNzB,EAAYC,GACXyB,MAAK,SAAAd,GACFY,EAAS,CACL9B,KAAKkB,EACLU,SAAS,SAGlB,CAAErB,IAEEsB,EDZyBI,CAAa1B,GAAjC2B,EAF0B,EAE/BlC,KAAe4B,EAFgB,EAEhBA,QAEtB,OACI,qCACA,oBAAIJ,UAAU,2CAAd,SAA0DjB,IAC1D,oBAAIiB,UAAU,SACd,sBAAKA,UAAU,kDAAf,UAECI,GAAW,sBAAKJ,UAAU,mBAAf,UAAkC,4CAAkB,qBAAKA,UAAU,eAC9EW,QAAQC,IAAIF,GAETA,EAASjB,KAAI,SAAAC,GACT,OACD,cAAC,EAAD,eAEQA,GADCA,EAAIC,cEhBfkB,EAAU,WAAO,IAAD,EAEH7C,mBAAS,CAAC,cAFP,mBAElBQ,EAFkB,KAEZT,EAFY,KAIzB,OACI,qCACI,iCACI,0CAEJ,uBAEA,kCACI,cAAC,EAAD,CAAcA,QAAYA,MAG9B,kCAEQS,EAAKiB,KAAI,SAAAqB,GACL,OACD,cAAC,EAAD,CAEA/B,UAAW+B,GADNA,Y,MCnB5BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a2ae4518.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategoria = ({setData}) => {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const eventoTeclado  = (e) =>{\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const eventoEnter = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if (input.trim().length > 2){\r\n            setData(data => [input, ...data]);\r\n            setInput('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={eventoEnter}>\r\n            <input type=\"text\" value={input} onChange={eventoTeclado} placeholder=\"Ingrese su personaje favorito\" />\r\n        </form>        \r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setData: PropTypes.func.isRequired\r\n}","export const getEndPoint = async(categoria) =>{\r\n\r\n    try {\r\n        const key = '88yz2YdQzTg7C7BPOOFaEkHgPzBaRJRZ';\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${encodeURI(categoria)}&limit=10`;\r\n        const respuesta = await fetch(url);\r\n        const jsonRespuesta = await respuesta.json();\r\n        const resultadoBusqueda = jsonRespuesta.data;\r\n\r\n        const personajes = resultadoBusqueda.map( img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n            } \r\n        })\r\n        return personajes;\r\n    } catch (error) {\r\n        return 'No existe esta personaje';\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const GfGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport { GfGridItem } from './GfGridItem';\r\n\r\n\r\nexport const RestApi = ({ categoria }) => {\r\n\r\n    const {data:imagenes, loading}= useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn titulo'>{categoria}</h3>\r\n        <hr className=\"line\"/>\r\n        <div className=\"animate__animated animate__backInLeft card-grid\">\r\n\r\n        {loading && <div className='containerLoading'><p>Loading....</p><div className='laoding'></div></div>}\r\n        {console.log(imagenes)}\r\n        {\r\n            imagenes.map(img => {\r\n                return(\r\n               <GfGridItem\r\n                   key={img.id}\r\n                   {...img}\r\n              />\r\n              )\r\n            })\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getEndPoint } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getEndPoint(categoria)\r\n        .then(img =>{\r\n            setState({\r\n                data:img,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [ categoria ])\r\n\r\n    return state; //{data:[], loading: true};\r\n}","import React, { useState } from 'react';\r\nimport { AddCategoria } from './Componentes/AddCategoria';\r\nimport { RestApi } from './Componentes/RestApi';\r\n\r\n\r\nexport const GiffApp = () => {\r\n\r\n    const [data, setData]=useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>GifApp</h1>\r\n            </header>\r\n            <hr/>\r\n\r\n            <section>\r\n                <AddCategoria setData = { setData }/>\r\n            </section>\r\n\r\n            <section>\r\n                {\r\n                    data.map(nombre =>{\r\n                        return(\r\n                       <RestApi \r\n                       key={nombre}\r\n                       categoria={nombre}\r\n                       />\r\n                       )\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiffApp } from './GiffApp';\nimport './css/index.css';\n\n\nReactDOM.render(\n    <GiffApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}